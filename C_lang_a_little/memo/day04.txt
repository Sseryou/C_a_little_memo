day04


[조건문 switch]
switch문은 다양한 조건을 검사할수 있게 만들어 놓은 것으로 하나의 변수나 수식에 대한 다양한 조건을 검사할 때 사용합니다.
변수 표현식으로 올 수 있는것
1. 정수
2. 문자형

<구조>
switch(변수(데이터가 담겨있는)){
              case 값1:
                  변수 == 값1 이면 실행할 문장
                  break;
              case 값2:
                  변수 == 값2 이면 실행할 문장
                  break;
              case 값3:
                  변수 == 값3 이면 실행할 문장
                  break;
              case 값4:
                  변수 == 값4 이면 실행할 문장
                  break;
             default:
                  모든 case내 일치하는 값이 없을경우 실행할 문장(else문과 비슷한 역할)
                  break;

}

break가 없으면 break를 만날때까지 명령을 수행하면서 쭉 내려간다.

if vs switch

if문은 범위를 찾아서 비교하는데 특화되어있다.

switch문은 1:1 대응을 찾아서 비교하는데 특화되어있습니다.

-----------------------------------------------------------------------------------------------------------------
[반복문]
조건에 의해서 명령을 반복할지 말지 제어하는 문법
- while
- do -while
- for

[while]
<구조>
while(조건){
     조건이 참일 동안 반복 실행할 문장
}

while문 작성시 팁
1. 변수를 하나 초기화 -> 시작값
2. 반복할 명령을 확인
3. 몇번 반복할 것인가 -> 조건식
4. 반복되면서 변수의 값은 얼만큼 변하는가.

while문의 특징
내가 명령을 몇번 반복할지 정확히 알 수 없을때도 사용할 수 있다.

[do - while]

do - while문은 조건에 대한 검사를 가장 나중에 진행합니다. 조건에 맞지 않아도 무조건 한번은 실행하고 빠져나오게 됩니다.

<구조>
do{
 조건이 참일동안에 반복할 명령;
}while(조건);

while문 vs do -while문의 차이
while문은 무조건 조건을 검사하고 참이어야 반복을 한다.
do-while문은 조건이 거짓이라도 무조건 한번은 실행을 하고 빠져나온다.



while vs for


