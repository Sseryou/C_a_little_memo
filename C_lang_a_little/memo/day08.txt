C에서의 메모리

스택 , 힙



[포인터 배열과 배열 포인터]


포인터 배열
-배열의 요소가 포인터인 배열

정수형 배열의 구조
정수 정수 정수

포인터형 배열의 구조
주소 주소 주소 

포인터 배열의 생성 방법
자료형* 포인터배열명[크기]


[다차원배열]

다차원배열은 2차원 이상의 배열을 의미하며, 배열의 요소가 선형적으로 나열되어있는 1차원 배열과는
구조가 다릅니다. 일반적으로 많이 사용하는 다차원 배열은 2차원 배열입니다.
1차원 배열의 형태가 선형적인 구조라면, 2차원 배열은 평면구조, 3차원 배열은 직육면체의 구조를
띄고 있습니다.

int arr1[10]; //길이가 10인 1차원 배열
int arr2[5][3]; //세로의 길이가 5, 가로의 길이가 3인 2차원 배열
int arr3[2][3][4]; //높이가 2 , 세로가 3 , 가로가 4인 3차원 배열

2차원 배열
2차원 배열은 평면적인 구조이며, 가로와 세로 길이의 정보가 존재합니다.

1차원 배열이 두개 붙어있는 모양으로도 볼 수 있습니다.

arr [0][0] arr [0][1] arr [0][2]
arr [1][0] arr [1][1] arr [1][2]

2차원 배열의 초기화
2차원배열을 선언과 동시에 초기화 하려면 1차원 배열과 마찬가지로 초기화 리스트를 사용할 수 있습니다.
다만, 2차원배열은 1차원배열이 여러 개 쌓여있는 형태를 띄고 있어 초기화 리스트가 여러개 필요합니다.

2차원 배열에서 요소의 접근 방법
배열명 [묶음위치][요소위치]

[배열포인터]
배열의 주소를 저장하는 포인터

생성방법
자료형 (*배열포인터명)[크기];

이미 배열의 이름이 존재하지만, 배열 포인터를 사용하는 이유는 2차원 이상의 배열을 가리킬 때
포인터를 통해 배열과 같은 인덱스에 접근을 할 수 있도록 하기 위해서 입니다.
즉, 포인터를 배열처럼 사용하기 위해서 배열 포인터를 사용하는 것 입니다.

1차원 배열에서는 의미가 없고, 2차원 이상의 배열에서만 의미가 있습니다.




