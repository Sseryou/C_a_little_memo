day06

for( ; ; ) == while(1)

break, continue
반복문 안에서만 쓰일수있음.

[break]
현재 진행중인 코드블럭을 강제로 종료하는 역할을 갖고 있습니다.

break를 만나면 가장 가까이 있는 반복문을 종료하고 빠져나온다.

[continue]
continue를 만나면 반복문에서 '이후의 코드를 생략하고 반복문의 처음으로 돌아가라' 라는 의미로 사용됩니다.
여기서 반복문의 처음이란 코드의 첫부분이 아닌 조건식을 검사하는 반복문의 가장 첫단계를 의미합니다.

continue를 만나면 가장 가까이 있는 반복문에 증감식으로 돌아간다.
증감식이 없으면 조건식으로 이동.


break 와 continue의 특징

1.반복문 안에서만 사용할수 있다.

2. break, continue 밑에는 어떠한 문장도 올 수 없다.


-------------------------------------------------------------------------------


[배열 array]
배열은 다수의 데이터를 저장하고 처리하기 위해 사용하는 데이터 표현방법입니다.

배열은 여러 개의 데이터를 하나의 묶음으로 관리할 수 있는 데이터 구조로 배열을 사용하면 
프로그램 내에서 변수의 개수를 줄일 수 있어 매우 편리합니다.

1. 배열의 선언
배열도 변수와 마찬가지로 선언 및 초기화 과정을 거쳐 메모리에 저장됩니다. 배열을 선언
하기 위해서는 다음 세가지 요소가 필요합니다.

-배열의 이름 : 변수 명명규칙과 똑같음.
-자료형 : 배열에 포함될 데이터들의 자료형
-배열의 길이 : 배열에 포함될 데이터의 개수

int myArr[3];

- 배열명 : myArr
- 자료형 : int
- 배열의 길이 : [3]

배열의 요소들은 실제로 메모리 상에 나란히 연결되어 있습니다. 따라서 배열은 여러개의
변수를 한번에 표현하는 데이터 구조라고 할 수 있습니다. 이렇게 선형적으로 나란히 선언된
배열을 1차원 배열이라고 합니다.

2. 1차원 배열의 초기화 방법
배열도 변수와 마찬가지로 초기화가 가능하다.

1) int myArr[3] = {10, 20, 30};
위와 같이 길이가 3인 배열을 초기화하면 메모리 공간에는 4byte(int) 공간3 개가 나란히
할당되고 각각의 공간에 10, 20, 30이 순서대로 저장됩니다.

배열을 초기화할 때 여러개의 데이터는 중괄호로 묶어서 저장을 합니다.

2) int myArr[] = {10, 20, 30, 40}
이 경우 컴파일러는 초기화 리스트에 들어있는 데이터의 개수를 확인한 다음 할당해야할
길이를 정해줍니다. 따라서 배열의 선언과 초기화가 동시에 이루어질때는 대괄호 안에 길이
정보를 작성하지 않아도 문제가 되지 않습니다.

int myArr[3];
이미 선언을 한 배열에서는 중괄호로 묶어서 데이터를 대량으로 집어넣을 수 없습니다.
각 방에 접근하여 값을 직접 넣어줘야 하는데 이때 index번호로 방에 접근할 수 있습니다.
index번호는 항상 0부터 시작하며 마지막 index번호는 길이 -1 입니다.


index 0 1 2....
항상 0부터 시작

배열명[index번호] = 데이터;

[문자열 변수 표현]

1. 문자열의 저장
C언어에서는 "" 를 이용해서 문자열을 표현합니다. 문자열이란 문자 여러개가 1차원적으로
나열되어있는 데이터를 의미합니다.

C언어에서는 문자열을 배열에 저장할 수 있는데, 이 때는 문자형 변수 char형으로 배열을 선언해야 합니다.

char greet[] = "hello Guys!";

문자열을 구성하고 있는 문자의 갯수는 12개 입니다.(공백과 쉼표 포함). 그러나 sizeof 연산자를
이용해 실제 길이 정보를 확인해보면 생각했던 것과 다른 결과가 반환됩니다.

sizeof == 데이터의 크기 (ex : int 일 경우 4를 반환, 4바이트기 때문)


C언어가 문자열을 표현할 때 문자열을 구성하는 문자의 맨 마지막에 '\0'이라는 문자를 삽입하기 때문에 길이가 13으로 나옵니다.

마지막에 삽입되는 \0 문자를 가리켜 '널(Null)'문자 라고 합니다. 보통은 데이터 없음을 나타내며,
문자열에서 사용될 때는 '문자열의 끝' 이라는 의미로 사용됩니다.

배열의 길이를 정해놓고 문자열을 넣게 되면 널문자가 들어갈 공간까지 고려해서 배열의 길이를 정해야 합니다.

2. 널문자와 문자열
실제 배열의 길이와 문자의 개수가 다른 문자열이 있다고 가정
char goodbye[50] = "GOOD BYE!";

50칸중 실제로 필요한 공간은 9칸이고 끝에는 널문자가 삽입된다. 문자를 출력하고 난 뒤에는 40칸이 더 있는 형태입니다.


3. 문자열의 입력과 출력
print함수로 문자열을 출력할 때는 널 문자로 문자열의 종료를 알릴 수 있습니다.


4.scanf를 통한 문자열 입력
scanf의 특징
- scanf 함수를 통한 입력은 공백문자(space, tab, enter)로 종료됩니다.
- 문자열을 입력할 때는 &연산자를 사용하지 않습니다.
- 문자열의 입력이 종료되면 문자열 끝에 널문자가 자동으로 삽입됩니다.












 








